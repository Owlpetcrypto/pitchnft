import './App.css'
import { ethers } from 'ethers'
import { useEffect, useState } from 'react'

function Main({ accounts, setAccounts }) {
  const [data, setData] = useState([])
  const isConnected = Boolean(accounts[0])

  // useEffect(() => {
  //   const script = document.createElement('script')
  //   script.setAttribute('src', 'https://platform.twitter.com/widgets.js')
  //   script.setAttribute('async', 'true')
  //   document.body.appendChild(script)
  // }, [])

  useEffect(() => {
    const getData = (_account) => {
      const options = { method: 'GET', headers: { accept: 'application/json' } }

      fetch(
        `https://api.opensea.io/api/v1/assets?owner=${_account}&order_direction=desc&limit=20&include_orders=false`,
        options,
      )
        .then((response) => response.json())
        .then((response) => {
          setData(response.assets)
          console.log(response)
        })
        .catch((err) => console.error(err))
    }

    if (isConnected) {
      getData(accounts[0])
    }
  }, [accounts, isConnected])

  return (
    <div className="grid">
      <div className="rectangle">
        <div className="wrap-text">
          <h2 className="collections">Collections</h2>
        </div>
        {/* <p>{accounts}</p> */}
        {isConnected ? (
          <>
            {data
              .filter((asset) => {
                const collection = ['broadside-episodes', 'h4h-unilever']
                if (collection.includes(asset.collection.slug)) {
                  return true
                }
              })
              .map((nft) => {
                return (
                  <div className="collection-card">
                    <img className="asset-image" src={nft.image_url} />
                    <h4>{nft.name}</h4>

                    {/* <p>{nft.token_id}</p> */}
                  </div>
                )
              })}
          </>
        ) : (
          <p>Need to connect</p>
        )}
      </div>

      <div className="squareone">
        <h2 className="benefit-alerts">Benefit alerts </h2>
        <div className="paragraph">
          <iframe
            src="https://e.widgetbot.io/channels/299881420891881473/355719584830980096"
            height="100%"
            width="100%"
          ></iframe>
        </div>
      </div>

      <div className="squaretwo">
        <h2 className="message"> Messages </h2>
        <div className="paragraph">
          <p> Trade offer for ManU PFP</p>
          <p> Trade offer for Vaynersports pass</p>
        </div>
      </div>

      <div className="squarethree">
        <h2 className="floor-price"> Sport NFT FPs</h2>
        <div>
          {/* <button onClick={getData}>getData</button>
           */}
        </div>
      </div>

      <div className="squarefour">
        <h2 className="sport-news">Upcoming News</h2>
        <div className="twitter-padding">
          <div className="twitter-wrapper">
            <a
              className="twitter-timeline"
              data-theme="light"
              href="https://twitter.com/PitchWeb3?ref_src=twsrc%5Etfw"
            >
              Tweets by PitchWeb3
            </a>
          </div>
        </div>
      </div>
    </div>
  )
}
export default Main


class Component {}

export default AssetCards

function calculator(a, b, operation) {
  return operation(a, b)
}

filter(5, 4, function (a, b) {
  ;[1, 2, 3].filter(val, index, whole)
  return a + b
})

function AssetCard2({ assets }) {
  return assets
    .filter((individualAsset) => {
      return individualAsset.collection.name.startsWith("Something")
    })
    .map((indivual) => {
      return <p>{indivual.collection.name}</p>
    })
}

;<AssetCard2
  assets={[
    {
      collection: {
        name: 'Something1',
      },
    },
    {
      collection: {
        name: 'Something2',
      },
    },
    {
      collection: {
        name: 'Other',
      },
    },
  ]}
/>

import { useEffect, useRef, useState } from 'react'
const scriptLoaded = useRef(false)

  // useEffect(() => {
  //   if (!scriptLoaded.current && isConnected) {
  //     const script = document.createElement('script')
  //     script.setAttribute('src', 'https://walls.io/js/wallsio-widget-1.2.js')
  //     script.setAttribute(
  //       'data-wallurl',
  //       'https://my.walls.io/aczv2?nobackground=1&amp;show_header=0',
  //     )
  //     script.setAttribute('async', 'true')
  //     script.setAttribute('data-width', '100%')
  //     script.setAttribute('data-autoheight', '1')
  //     script.setAttribute('data-height', '800%')
  //     script.setAttribute('data-lazyload', '1%')
  //     // document.body.appendChild(script)
  //     document.querySelector('.twitter-wrapper').appendChild(script)

  //     //function
  //     scriptLoaded.current = true
  //     console.log('scriptLoaded', scriptLoaded.current)
  //   }
  //   //depedency array - see if its change
  // }, [scriptLoaded, isConnected])

  // Object.entries(attributes).forEach(([key, value]) => {
  //   script.setAttribute(key, value)
  //  })
